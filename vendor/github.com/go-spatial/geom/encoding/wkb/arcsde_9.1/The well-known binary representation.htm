<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Frameset//EN">
<!-- saved from url=(0071)http://edndoc.esri.com/arcsde/9.1/general_topics/wkb_representation.htm -->
<html data-ember-extension="1"><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>The well-known binary representation</title>

<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="./The well-known binary representation_files/w95help_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='../w95help.css'>");}
//-->
</script>
<style type="text/css">
<!--
h3.whs1 { font-family:Verdana, sans-serif; font-size:13.5pt; }
p.whs2 { font-family:Verdana, sans-serif; font-size:9.5pt; }
h4.whs3 { font-family:Verdana, sans-serif; font-size:10pt; }
h4.whs4 { font-family:Verdana, sans-serif; font-size:9.5pt; }
div.whs5 { border:solid #000000 .5pt; padding:1.0pt 4.0pt 1.0pt 4.0pt; }
p.whs6 { font-family:'Courier New' , monospace; font-size:10pt; }
img_whs7 { width:571px; height:158px; border-style:none; }
p.whs8 { font-family:Verdana, sans-serif; font-size:8pt; }
-->
</style><script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style><script type="text/javascript" language="javascript1.2" src="./The well-known binary representation_files/whmsg.js"></script>
<script type="text/javascript" language="javascript" src="./The well-known binary representation_files/whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="./The well-known binary representation_files/whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="./The well-known binary representation_files/whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="./The well-known binary representation_files/whtopic.js"></script>
<script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.setRelStartPage)
	{
	addTocInfo("Getting Started\nGeometry\nRepresentations of Geometry\nThe well-known binary representation");

	}


	if (window.setRelStartPage)
	{
	setRelStartPage("../sdehelp.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}

}
else
	if (window.gbIE4)
		document.location.reload();
//-->
</script>
</head>
<body><script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(4);
//-->
</script><script language="JavaScript" src="./The well-known binary representation_files/synch.js"></script>

<table class="Header" frame="void" x-use-null-cells="" style="width: 100%;
				border-spacing: 0px;
				border-spacing: 0px;" cellspacing="0" width="100%">

<tbody><tr class="GettingStartedBanner">
<td class="HeaderFont" style="padding-left: 5px;
			padding-top: 5px;
			padding-right: 5px;
			padding-bottom: 5px;
			background-color: #00ffff;" bgcolor="#00FFFF"><span style="font-family: Verdana, sans-serif;">Getting 
 started</span></td></tr>
</tbody></table>

<h3 class="whs1">The well-known 
 binary representation</h3>

<p class="whs2">The well-known 
 binary representation&nbsp;for OGC geometry (WKBGeometry), provides a 
 portable representation of a geometry value as a contiguous stream of 
 bytes. It permits geometry values to be exchanged between an ODBC&nbsp;client 
 and an SQL database in binary form.</p>

<p class="whs2">Functions 
 are provided in the SQL, JAVA, and C-API to import and export the well-known 
 binary representation of geometry.</p>

<p class="whs2">The well-known 
 binary representation of geometry defines an encoding for 2D simple feature 
 geometry as defined by the <u style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">OpenGIS 
 Simple Features Specification for SQL</u>, and ISO 19125. This encoding 
 does not support elevations, measures, CAD, or annotation.</p>

<p class="whs2">The well-known 
 binary representation&nbsp;is a contiguous stream of bytes. It permits 
 geometry to be exchanged between an ODBC&nbsp;client and an SQL database 
 in binary form. Because these geometry functions require the definition 
 of C structures to map the binary representation, they’re intended for 
 use within a 3GL program and aren’t suited to a 4GL environment.</p>

<p class="whs2">The well-known 
 binary representation&nbsp;for geometry is obtained by serializing a geometry 
 instance as a sequence of numeric types drawn from the set {Unsigned Integer, 
 Double} and then serializing each numeric type as a sequence of bytes 
 using one of two well-defined, standard binary representations for numeric 
 types (NDR, XDR). The specific binary encoding&nbsp; used for a geometry 
 byte stream is described by a one-byte tag that precedes the serialized 
 bytes. The only difference between the two encodings of geometry is byte 
 order. The XDR encoding is big-endian, while the NDR encoding is little-endian.</p>

<h4 class="whs3">Numeric 
 type definitions</h4>

<p class="whs2">An ‘unsigned 
 integer’ is a 32-bit (4 byte) data type that encodes a nonnegative integer 
 in the range [0, 4294967295].</p>

<p class="whs2">A ‘double’<span style="font-style: italic;"> <i></i></span>is a 64-bit (8 byte) double-precision 
 data type that encodes a double-precision number using the IEEE 754 double-precision 
 format.</p>

<p class="whs2">The above 
 definitions are common to both XDR and NDR.</p>

<h4 class="whs3">XDR (big 
 endian) encoding of numeric types</h4>

<p class="whs2">The XDR 
 representation of an unsigned integer is big-endian (most significant 
 byte first).</p>

<p class="whs2">The XDR 
 representation of a double is big-endian (sign bit is first byte).</p>

<h4 class="whs4">NDR (little 
 endian) encoding of numeric types</h4>

<p class="whs2">The NDR 
 representation of an unsigned integer is little-endian (least significant 
 byte first).</p>

<p class="whs2">The NDR 
 representation of a double is little-endian (sign bit is last byte).</p>

<h4 class="whs4">Conversion 
 between the NDR and XDR representations of WKB geometry</h4>

<p class="whs2">Conversion&nbsp;between 
 the NDR and XDR data types for unsigned integers and doubles is a simple 
 operation involving reversing the order of bytes within each unsigned 
 integer or double in the byte stream.</p>

<h4 class="whs4">Description 
 of WKBGeometry byte streams</h4>

<p class="whs2">The well-known 
 binary representation for geometry is described below. The basic building 
 block is the byte stream for a point that consists of two doubles. The 
 byte streams for other geometries are built using the byte streams for 
 geometries that have already been defined.</p>

<div class="whs5">
<p>&nbsp;</p>

<p class="whs6">// Basic 
 Type definitions</p>

<p class="whs6">// byte 
 : 1 byte</p>

<p class="whs6">// uint32 
 : 32 bit unsigned integer&nbsp; (4 bytes)</p>

<p class="whs6">// double 
 : double precision number (8 bytes)</p>

<p class="whs6">&nbsp;</p>

<p class="whs6">// Building 
 Blocks : Point, LinearRing</p>

<p class="whs6">Point 
 {<br>
double x;<br>
double y;<br>
};</p>

<p class="whs6">LinearRing&nbsp;&nbsp; 
 {<br>
uint32 numPoints;<br>
Point&nbsp; points[numPoints];<br>
}</p>

<p class="whs6">enum 
 wkbGeometryType {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
wkbPoint = 1,<br>
wkbLineString = 2,<br>
wkbPolygon = 3,<br>
wkbMultiPoint = 4,<br>
wkbMultiLineString = 5,<br>
wkbMultiPolygon = 6,<br>
wkbGeometryCollection = 7<br>
};</p>

<p class="whs6">enum 
 wkbByteOrder {</p>

<p class="whs6">&nbsp;&nbsp; 
 wkbXDR = 0,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 // Big Endian</p>

<p class="whs6">&nbsp;&nbsp; 
 wkbNDR = 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 // Little Endian</p>

<p class="whs6">};</p>

<p class="whs6">&nbsp;</p>

<p class="whs6">WKBPoint 
 {<br>
byte&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 byteOrder;<br>
uint32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wkbType;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 // 1<br>
Point&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 point;<br>
}</p>

<p class="whs6">WKBLineString 
 {<br>
byte&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 byteOrder;<br>
uint32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wkbType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 // 2<br>
uint32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; numPoints;<br>
Point&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 points[numPoints];<br>
}</p>

<p class="whs6">WKBPolygon 
 {<br>
byte&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 byteOrder;<br>
uint32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wkbType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 // 3<br>
uint32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; numRings;<br>
LinearRing&nbsp;&nbsp;&nbsp; rings[numRings];<br>
}</p>

<p class="whs6">WKBMultiPoint 
 {<br>
byte&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 byteOrder;<br>
uint32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wkbType;&nbsp;&nbsp;&nbsp;&nbsp; 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 // 4<br>
uint32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; num_wkbPoints;<br>
WKBPoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WKBPoints[num_wkbPoints];<br>
}</p>

<p class="whs6">WKBMultiLineString&nbsp;&nbsp; 
 {<br>
byte&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 byteOrder;<br>
uint32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wkbType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 // 5<br>
uint32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; num_wkbLineStrings;<br>
WKBLineString WKBLineStrings[num_wkbLineStrings];<br>
}</p>

<p class="whs6">wkbMultiPolygon 
 {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
byte&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 byteOrder;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
uint32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wkbType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 // 6<br>
uint32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; num_wkbPolygons;<br>
WKBPolygon&nbsp;&nbsp;&nbsp; wkbPolygons[num_wkbPolygons];<br>
}</p>

<p class="whs6">WKBGeometry&nbsp; 
 {<br>
union {<br>
WKBPoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 point;<br>
WKBLineString&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 linestring;<br>
WKBPolygon&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 polygon;<br>
WKBGeometryCollection&nbsp;&nbsp; collection;<br>
WKBMultiPoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 mpoint;<br>
WKBMultiLineString&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mlinestring;<br>
WKBMultiPolygon&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mpolygon;<br>
}<br>
};</p>

<p class="whs6">&nbsp;</p>

<p><span style="font-family: &#39;Courier New&#39;, monospace; font-size: 10pt;"><font size="2" style="font-size:10pt;">WKBGeometryCollection 
 {<br>
byte&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 byte_order;<br>
uint32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wkbType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 // 7<br>
uint32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; num_wkbGeometries;<br>
WKBGeometry&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wkbGeometries[num_wkbGeometries]</font></span><span style="font-family: &#39;Courier New&#39;, monospace; font-size: 10pt;"><font size="2" style="font-size:10pt;"><br>
}</font></span></p>

<p>&nbsp;</p>

<p>&nbsp;</p>
</div>

<p>&nbsp;</p>

<p><img src="./The well-known binary representation_files/binrep01.gif" width="571px" height="158px" border="0" class="img_whs7"></p>

<p class="whs8">Well-known 
 binary representation for a geometry object in NDR format (B=1) of type 
 polygon (T=3) with two linears (NR = 2) and each ring having three points 
 (NP = 3).</p>

<h4 class="whs4"><span style="font-size: 12pt;"><font size="3" style="font-size:12pt;">Assertions 
 for well-known binary representation for geometry</font></span> </h4>

<p class="whs2">The well-known 
 binary representation for geometry is designed to represent instances 
 of the geometry types described in the geometry object model and in the 
 <span style="font-style: italic;"><i>OpenGIS Abstract Specification.</i></span> 
 &nbsp;</p>

<p class="whs2">These assertions 
 imply the following for rings, polygons, and multipolygons:</p>

<ul>
	
	<li class="kadov-p"><span style="font-weight: bold;
									font-family: Verdana, sans-serif;
									font-size: 9.5pt;"><font size="2" style="font-size:9pt;"><b>Linear rings—</b></font></span><span style="font-family: Verdana, sans-serif; font-size: 9.5pt;"><font size="2" style="font-size:9pt;">Rings are 
 simple and closed, which means that linear rings may not self intersect.</font></span></li>
	
	<li class="kadov-p"><span style="font-weight: bold;
									font-family: Verdana, sans-serif;
									font-size: 9.5pt;"><font size="2" style="font-size:9pt;"><b>Polygons—</b></font></span><span style="font-family: Verdana, sans-serif; font-size: 9.5pt;"><font size="2" style="font-size:9pt;">No two linear 
 rings in the boundary of a polygon may cross each other. The linear rings 
 in the boundary of a polygon may intersect, at most, at a single point 
 but only as a tangent.</font></span></li>
	
	<li class="kadov-p"><span style="font-weight: bold;
									font-family: Verdana, sans-serif;
									font-size: 9.5pt;"><font size="2" style="font-size:9pt;"><b>Multipolygons—</b></font></span><span style="font-family: Verdana, sans-serif; font-size: 9.5pt;"><font size="2" style="font-size:9pt;">The interiors 
 of two polygons that are elements of a multipolygon may not intersect. 
 The boundaries of any two polygons that are elements of a multipolygon 
 may touch at only a finite number of points.</font></span> </li>
</ul>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>


</body></html>